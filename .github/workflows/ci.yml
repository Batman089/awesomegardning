name: CI/CD Pipeline

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  build_backend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Build with Maven
      run: mvn clean install
      working-directory: backend
    - name: Code Quality Gate
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.organization=awesomegardning
          -Dsonar.projectKey=Batman089_awesomegardning
          -Dsonar.java.binaries=**/target/classes
    - name: Run tests
      run: mvn test
      working-directory: backend
  build_client:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20.12.1'

    - name: Install dependencies
      run: npm ci
      working-directory: client

    - name: Build
      run: npm run build
      working-directory: client

    - name: TypeScript Code Quality
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.organization=awesomegardning
          -Dsonar.projectKey=Batman089_awesomegardning
          -Dsonar.java.binaries=**/target/classes
  sonar:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
            -Dsonar.organization=awesomegardning
            -Dsonar.projectKey=Batman089_awesomegardning
            -Dsonar.java.binaries=**/target/classes
  deploy:
    needs: [build_backend, build_client, sonar]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to Heroku
      uses: akhileshns/heroku-deploy@v3.12.12 # This action deploys to Heroku
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: "safe-awesomegardning" # Replace with your Heroku app name
        heroku_email: "Jassinakhlaqi@hotmail.com" # Replace with your Heroku email
        healthcheck: true # Optional, waits for the app to boot
        dontuseforce: 1 # Optional, set to true to prevent force push
